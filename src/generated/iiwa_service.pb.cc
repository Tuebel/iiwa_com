// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iiwa_service.proto

#include "iiwa_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace iiwa_com {
class StreamCartesianPoseRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamCartesianPoseRequest>
      _instance;
} _StreamCartesianPoseRequest_default_instance_;
class StreamCartesianStateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamCartesianStateRequest>
      _instance;
} _StreamCartesianStateRequest_default_instance_;
class CartesianStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CartesianState>
      _instance;
} _CartesianState_default_instance_;
class CartesianPoseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CartesianPose>
      _instance;
} _CartesianPose_default_instance_;
class CartesianForceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CartesianForce>
      _instance;
} _CartesianForce_default_instance_;
}  // namespace iiwa_com
namespace protobuf_iiwa_5fservice_2eproto {
void InitDefaultsStreamCartesianPoseRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::iiwa_com::_StreamCartesianPoseRequest_default_instance_;
    new (ptr) ::iiwa_com::StreamCartesianPoseRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::iiwa_com::StreamCartesianPoseRequest::InitAsDefaultInstance();
}

void InitDefaultsStreamCartesianPoseRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStreamCartesianPoseRequestImpl);
}

void InitDefaultsStreamCartesianStateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::iiwa_com::_StreamCartesianStateRequest_default_instance_;
    new (ptr) ::iiwa_com::StreamCartesianStateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::iiwa_com::StreamCartesianStateRequest::InitAsDefaultInstance();
}

void InitDefaultsStreamCartesianStateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStreamCartesianStateRequestImpl);
}

void InitDefaultsCartesianStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_iiwa_5fservice_2eproto::InitDefaultsCartesianPose();
  protobuf_iiwa_5fservice_2eproto::InitDefaultsCartesianForce();
  {
    void* ptr = &::iiwa_com::_CartesianState_default_instance_;
    new (ptr) ::iiwa_com::CartesianState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::iiwa_com::CartesianState::InitAsDefaultInstance();
}

void InitDefaultsCartesianState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCartesianStateImpl);
}

void InitDefaultsCartesianPoseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::iiwa_com::_CartesianPose_default_instance_;
    new (ptr) ::iiwa_com::CartesianPose();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::iiwa_com::CartesianPose::InitAsDefaultInstance();
}

void InitDefaultsCartesianPose() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCartesianPoseImpl);
}

void InitDefaultsCartesianForceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::iiwa_com::_CartesianForce_default_instance_;
    new (ptr) ::iiwa_com::CartesianForce();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::iiwa_com::CartesianForce::InitAsDefaultInstance();
}

void InitDefaultsCartesianForce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCartesianForceImpl);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::StreamCartesianPoseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::StreamCartesianStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::CartesianState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::CartesianState, demanded_pose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::CartesianState, pose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::CartesianState, force_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::CartesianState, force_uncertainty_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::CartesianPose, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::CartesianPose, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::CartesianPose, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::CartesianPose, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::CartesianPose, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::CartesianPose, b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::CartesianPose, c_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::CartesianPose, base_frame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::CartesianPose, child_frame_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::CartesianForce, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::CartesianForce, f_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::CartesianForce, f_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::CartesianForce, f_z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::CartesianForce, t_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::CartesianForce, t_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::CartesianForce, t_z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::iiwa_com::CartesianForce, frame_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::iiwa_com::StreamCartesianPoseRequest)},
  { 5, -1, sizeof(::iiwa_com::StreamCartesianStateRequest)},
  { 10, -1, sizeof(::iiwa_com::CartesianState)},
  { 19, -1, sizeof(::iiwa_com::CartesianPose)},
  { 32, -1, sizeof(::iiwa_com::CartesianForce)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::iiwa_com::_StreamCartesianPoseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::iiwa_com::_StreamCartesianStateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::iiwa_com::_CartesianState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::iiwa_com::_CartesianPose_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::iiwa_com::_CartesianForce_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "iiwa_service.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022iiwa_service.proto\022\010iiwa_com\"\034\n\032Stream"
      "CartesianPoseRequest\"\035\n\033StreamCartesianS"
      "tateRequest\"\305\001\n\016CartesianState\022.\n\rdemand"
      "ed_pose\030\001 \001(\0132\027.iiwa_com.CartesianPose\022%"
      "\n\004pose\030\002 \001(\0132\027.iiwa_com.CartesianPose\022\'\n"
      "\005force\030\003 \001(\0132\030.iiwa_com.CartesianForce\0223"
      "\n\021force_uncertainty\030\004 \001(\0132\030.iiwa_com.Car"
      "tesianForce\"z\n\rCartesianPose\022\t\n\001x\030\001 \001(\001\022"
      "\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\022\t\n\001a\030\004 \001(\001\022\t\n\001b\030\005 "
      "\001(\001\022\t\n\001c\030\006 \001(\001\022\022\n\nbase_frame\030\007 \001(\t\022\023\n\013ch"
      "ild_frame\030\010 \001(\t\"m\n\016CartesianForce\022\013\n\003f_x"
      "\030\001 \001(\001\022\013\n\003f_y\030\002 \001(\001\022\013\n\003f_z\030\003 \001(\001\022\013\n\003t_x\030"
      "\004 \001(\001\022\013\n\003t_y\030\005 \001(\001\022\013\n\003t_z\030\006 \001(\001\022\r\n\005frame"
      "\030\007 \001(\t2\304\001\n\013IiwaService\022X\n\023StreamCartesia"
      "nPose\022$.iiwa_com.StreamCartesianPoseRequ"
      "est\032\027.iiwa_com.CartesianPose\"\0000\001\022[\n\024Stre"
      "amCartesianState\022%.iiwa_com.StreamCartes"
      "ianStateRequest\032\030.iiwa_com.CartesianStat"
      "e\"\0000\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 733);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "iiwa_service.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_iiwa_5fservice_2eproto
namespace iiwa_com {

// ===================================================================

void StreamCartesianPoseRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamCartesianPoseRequest::StreamCartesianPoseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iiwa_5fservice_2eproto::InitDefaultsStreamCartesianPoseRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:iiwa_com.StreamCartesianPoseRequest)
}
StreamCartesianPoseRequest::StreamCartesianPoseRequest(const StreamCartesianPoseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:iiwa_com.StreamCartesianPoseRequest)
}

void StreamCartesianPoseRequest::SharedCtor() {
  _cached_size_ = 0;
}

StreamCartesianPoseRequest::~StreamCartesianPoseRequest() {
  // @@protoc_insertion_point(destructor:iiwa_com.StreamCartesianPoseRequest)
  SharedDtor();
}

void StreamCartesianPoseRequest::SharedDtor() {
}

void StreamCartesianPoseRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StreamCartesianPoseRequest::descriptor() {
  ::protobuf_iiwa_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iiwa_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StreamCartesianPoseRequest& StreamCartesianPoseRequest::default_instance() {
  ::protobuf_iiwa_5fservice_2eproto::InitDefaultsStreamCartesianPoseRequest();
  return *internal_default_instance();
}

StreamCartesianPoseRequest* StreamCartesianPoseRequest::New(::google::protobuf::Arena* arena) const {
  StreamCartesianPoseRequest* n = new StreamCartesianPoseRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StreamCartesianPoseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:iiwa_com.StreamCartesianPoseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool StreamCartesianPoseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:iiwa_com.StreamCartesianPoseRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:iiwa_com.StreamCartesianPoseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:iiwa_com.StreamCartesianPoseRequest)
  return false;
#undef DO_
}

void StreamCartesianPoseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:iiwa_com.StreamCartesianPoseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:iiwa_com.StreamCartesianPoseRequest)
}

::google::protobuf::uint8* StreamCartesianPoseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:iiwa_com.StreamCartesianPoseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:iiwa_com.StreamCartesianPoseRequest)
  return target;
}

size_t StreamCartesianPoseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:iiwa_com.StreamCartesianPoseRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StreamCartesianPoseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:iiwa_com.StreamCartesianPoseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamCartesianPoseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StreamCartesianPoseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:iiwa_com.StreamCartesianPoseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:iiwa_com.StreamCartesianPoseRequest)
    MergeFrom(*source);
  }
}

void StreamCartesianPoseRequest::MergeFrom(const StreamCartesianPoseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:iiwa_com.StreamCartesianPoseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StreamCartesianPoseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:iiwa_com.StreamCartesianPoseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamCartesianPoseRequest::CopyFrom(const StreamCartesianPoseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:iiwa_com.StreamCartesianPoseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamCartesianPoseRequest::IsInitialized() const {
  return true;
}

void StreamCartesianPoseRequest::Swap(StreamCartesianPoseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StreamCartesianPoseRequest::InternalSwap(StreamCartesianPoseRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StreamCartesianPoseRequest::GetMetadata() const {
  protobuf_iiwa_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iiwa_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StreamCartesianStateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamCartesianStateRequest::StreamCartesianStateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iiwa_5fservice_2eproto::InitDefaultsStreamCartesianStateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:iiwa_com.StreamCartesianStateRequest)
}
StreamCartesianStateRequest::StreamCartesianStateRequest(const StreamCartesianStateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:iiwa_com.StreamCartesianStateRequest)
}

void StreamCartesianStateRequest::SharedCtor() {
  _cached_size_ = 0;
}

StreamCartesianStateRequest::~StreamCartesianStateRequest() {
  // @@protoc_insertion_point(destructor:iiwa_com.StreamCartesianStateRequest)
  SharedDtor();
}

void StreamCartesianStateRequest::SharedDtor() {
}

void StreamCartesianStateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StreamCartesianStateRequest::descriptor() {
  ::protobuf_iiwa_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iiwa_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StreamCartesianStateRequest& StreamCartesianStateRequest::default_instance() {
  ::protobuf_iiwa_5fservice_2eproto::InitDefaultsStreamCartesianStateRequest();
  return *internal_default_instance();
}

StreamCartesianStateRequest* StreamCartesianStateRequest::New(::google::protobuf::Arena* arena) const {
  StreamCartesianStateRequest* n = new StreamCartesianStateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StreamCartesianStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:iiwa_com.StreamCartesianStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool StreamCartesianStateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:iiwa_com.StreamCartesianStateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:iiwa_com.StreamCartesianStateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:iiwa_com.StreamCartesianStateRequest)
  return false;
#undef DO_
}

void StreamCartesianStateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:iiwa_com.StreamCartesianStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:iiwa_com.StreamCartesianStateRequest)
}

::google::protobuf::uint8* StreamCartesianStateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:iiwa_com.StreamCartesianStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:iiwa_com.StreamCartesianStateRequest)
  return target;
}

size_t StreamCartesianStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:iiwa_com.StreamCartesianStateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StreamCartesianStateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:iiwa_com.StreamCartesianStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamCartesianStateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StreamCartesianStateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:iiwa_com.StreamCartesianStateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:iiwa_com.StreamCartesianStateRequest)
    MergeFrom(*source);
  }
}

void StreamCartesianStateRequest::MergeFrom(const StreamCartesianStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:iiwa_com.StreamCartesianStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StreamCartesianStateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:iiwa_com.StreamCartesianStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamCartesianStateRequest::CopyFrom(const StreamCartesianStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:iiwa_com.StreamCartesianStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamCartesianStateRequest::IsInitialized() const {
  return true;
}

void StreamCartesianStateRequest::Swap(StreamCartesianStateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StreamCartesianStateRequest::InternalSwap(StreamCartesianStateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StreamCartesianStateRequest::GetMetadata() const {
  protobuf_iiwa_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iiwa_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CartesianState::InitAsDefaultInstance() {
  ::iiwa_com::_CartesianState_default_instance_._instance.get_mutable()->demanded_pose_ = const_cast< ::iiwa_com::CartesianPose*>(
      ::iiwa_com::CartesianPose::internal_default_instance());
  ::iiwa_com::_CartesianState_default_instance_._instance.get_mutable()->pose_ = const_cast< ::iiwa_com::CartesianPose*>(
      ::iiwa_com::CartesianPose::internal_default_instance());
  ::iiwa_com::_CartesianState_default_instance_._instance.get_mutable()->force_ = const_cast< ::iiwa_com::CartesianForce*>(
      ::iiwa_com::CartesianForce::internal_default_instance());
  ::iiwa_com::_CartesianState_default_instance_._instance.get_mutable()->force_uncertainty_ = const_cast< ::iiwa_com::CartesianForce*>(
      ::iiwa_com::CartesianForce::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CartesianState::kDemandedPoseFieldNumber;
const int CartesianState::kPoseFieldNumber;
const int CartesianState::kForceFieldNumber;
const int CartesianState::kForceUncertaintyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CartesianState::CartesianState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iiwa_5fservice_2eproto::InitDefaultsCartesianState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:iiwa_com.CartesianState)
}
CartesianState::CartesianState(const CartesianState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_demanded_pose()) {
    demanded_pose_ = new ::iiwa_com::CartesianPose(*from.demanded_pose_);
  } else {
    demanded_pose_ = NULL;
  }
  if (from.has_pose()) {
    pose_ = new ::iiwa_com::CartesianPose(*from.pose_);
  } else {
    pose_ = NULL;
  }
  if (from.has_force()) {
    force_ = new ::iiwa_com::CartesianForce(*from.force_);
  } else {
    force_ = NULL;
  }
  if (from.has_force_uncertainty()) {
    force_uncertainty_ = new ::iiwa_com::CartesianForce(*from.force_uncertainty_);
  } else {
    force_uncertainty_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:iiwa_com.CartesianState)
}

void CartesianState::SharedCtor() {
  ::memset(&demanded_pose_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&force_uncertainty_) -
      reinterpret_cast<char*>(&demanded_pose_)) + sizeof(force_uncertainty_));
  _cached_size_ = 0;
}

CartesianState::~CartesianState() {
  // @@protoc_insertion_point(destructor:iiwa_com.CartesianState)
  SharedDtor();
}

void CartesianState::SharedDtor() {
  if (this != internal_default_instance()) delete demanded_pose_;
  if (this != internal_default_instance()) delete pose_;
  if (this != internal_default_instance()) delete force_;
  if (this != internal_default_instance()) delete force_uncertainty_;
}

void CartesianState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CartesianState::descriptor() {
  ::protobuf_iiwa_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iiwa_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CartesianState& CartesianState::default_instance() {
  ::protobuf_iiwa_5fservice_2eproto::InitDefaultsCartesianState();
  return *internal_default_instance();
}

CartesianState* CartesianState::New(::google::protobuf::Arena* arena) const {
  CartesianState* n = new CartesianState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CartesianState::Clear() {
// @@protoc_insertion_point(message_clear_start:iiwa_com.CartesianState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && demanded_pose_ != NULL) {
    delete demanded_pose_;
  }
  demanded_pose_ = NULL;
  if (GetArenaNoVirtual() == NULL && pose_ != NULL) {
    delete pose_;
  }
  pose_ = NULL;
  if (GetArenaNoVirtual() == NULL && force_ != NULL) {
    delete force_;
  }
  force_ = NULL;
  if (GetArenaNoVirtual() == NULL && force_uncertainty_ != NULL) {
    delete force_uncertainty_;
  }
  force_uncertainty_ = NULL;
  _internal_metadata_.Clear();
}

bool CartesianState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:iiwa_com.CartesianState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .iiwa_com.CartesianPose demanded_pose = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_demanded_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .iiwa_com.CartesianPose pose = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .iiwa_com.CartesianForce force = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_force()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .iiwa_com.CartesianForce force_uncertainty = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_force_uncertainty()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:iiwa_com.CartesianState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:iiwa_com.CartesianState)
  return false;
#undef DO_
}

void CartesianState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:iiwa_com.CartesianState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .iiwa_com.CartesianPose demanded_pose = 1;
  if (this->has_demanded_pose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->demanded_pose_, output);
  }

  // .iiwa_com.CartesianPose pose = 2;
  if (this->has_pose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pose_, output);
  }

  // .iiwa_com.CartesianForce force = 3;
  if (this->has_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->force_, output);
  }

  // .iiwa_com.CartesianForce force_uncertainty = 4;
  if (this->has_force_uncertainty()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->force_uncertainty_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:iiwa_com.CartesianState)
}

::google::protobuf::uint8* CartesianState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:iiwa_com.CartesianState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .iiwa_com.CartesianPose demanded_pose = 1;
  if (this->has_demanded_pose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->demanded_pose_, deterministic, target);
  }

  // .iiwa_com.CartesianPose pose = 2;
  if (this->has_pose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->pose_, deterministic, target);
  }

  // .iiwa_com.CartesianForce force = 3;
  if (this->has_force()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->force_, deterministic, target);
  }

  // .iiwa_com.CartesianForce force_uncertainty = 4;
  if (this->has_force_uncertainty()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->force_uncertainty_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:iiwa_com.CartesianState)
  return target;
}

size_t CartesianState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:iiwa_com.CartesianState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .iiwa_com.CartesianPose demanded_pose = 1;
  if (this->has_demanded_pose()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->demanded_pose_);
  }

  // .iiwa_com.CartesianPose pose = 2;
  if (this->has_pose()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pose_);
  }

  // .iiwa_com.CartesianForce force = 3;
  if (this->has_force()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->force_);
  }

  // .iiwa_com.CartesianForce force_uncertainty = 4;
  if (this->has_force_uncertainty()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->force_uncertainty_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CartesianState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:iiwa_com.CartesianState)
  GOOGLE_DCHECK_NE(&from, this);
  const CartesianState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CartesianState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:iiwa_com.CartesianState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:iiwa_com.CartesianState)
    MergeFrom(*source);
  }
}

void CartesianState::MergeFrom(const CartesianState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:iiwa_com.CartesianState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_demanded_pose()) {
    mutable_demanded_pose()->::iiwa_com::CartesianPose::MergeFrom(from.demanded_pose());
  }
  if (from.has_pose()) {
    mutable_pose()->::iiwa_com::CartesianPose::MergeFrom(from.pose());
  }
  if (from.has_force()) {
    mutable_force()->::iiwa_com::CartesianForce::MergeFrom(from.force());
  }
  if (from.has_force_uncertainty()) {
    mutable_force_uncertainty()->::iiwa_com::CartesianForce::MergeFrom(from.force_uncertainty());
  }
}

void CartesianState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:iiwa_com.CartesianState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CartesianState::CopyFrom(const CartesianState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:iiwa_com.CartesianState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CartesianState::IsInitialized() const {
  return true;
}

void CartesianState::Swap(CartesianState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CartesianState::InternalSwap(CartesianState* other) {
  using std::swap;
  swap(demanded_pose_, other->demanded_pose_);
  swap(pose_, other->pose_);
  swap(force_, other->force_);
  swap(force_uncertainty_, other->force_uncertainty_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CartesianState::GetMetadata() const {
  protobuf_iiwa_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iiwa_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CartesianPose::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CartesianPose::kXFieldNumber;
const int CartesianPose::kYFieldNumber;
const int CartesianPose::kZFieldNumber;
const int CartesianPose::kAFieldNumber;
const int CartesianPose::kBFieldNumber;
const int CartesianPose::kCFieldNumber;
const int CartesianPose::kBaseFrameFieldNumber;
const int CartesianPose::kChildFrameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CartesianPose::CartesianPose()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iiwa_5fservice_2eproto::InitDefaultsCartesianPose();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:iiwa_com.CartesianPose)
}
CartesianPose::CartesianPose(const CartesianPose& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  base_frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.base_frame().size() > 0) {
    base_frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_frame_);
  }
  child_frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.child_frame().size() > 0) {
    child_frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.child_frame_);
  }
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&c_) -
    reinterpret_cast<char*>(&x_)) + sizeof(c_));
  // @@protoc_insertion_point(copy_constructor:iiwa_com.CartesianPose)
}

void CartesianPose::SharedCtor() {
  base_frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  child_frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&c_) -
      reinterpret_cast<char*>(&x_)) + sizeof(c_));
  _cached_size_ = 0;
}

CartesianPose::~CartesianPose() {
  // @@protoc_insertion_point(destructor:iiwa_com.CartesianPose)
  SharedDtor();
}

void CartesianPose::SharedDtor() {
  base_frame_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  child_frame_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CartesianPose::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CartesianPose::descriptor() {
  ::protobuf_iiwa_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iiwa_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CartesianPose& CartesianPose::default_instance() {
  ::protobuf_iiwa_5fservice_2eproto::InitDefaultsCartesianPose();
  return *internal_default_instance();
}

CartesianPose* CartesianPose::New(::google::protobuf::Arena* arena) const {
  CartesianPose* n = new CartesianPose;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CartesianPose::Clear() {
// @@protoc_insertion_point(message_clear_start:iiwa_com.CartesianPose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  base_frame_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  child_frame_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&c_) -
      reinterpret_cast<char*>(&x_)) + sizeof(c_));
  _internal_metadata_.Clear();
}

bool CartesianPose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:iiwa_com.CartesianPose)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double a = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double b = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double c = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &c_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string base_frame = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_base_frame()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->base_frame().data(), static_cast<int>(this->base_frame().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "iiwa_com.CartesianPose.base_frame"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string child_frame = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_child_frame()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->child_frame().data(), static_cast<int>(this->child_frame().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "iiwa_com.CartesianPose.child_frame"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:iiwa_com.CartesianPose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:iiwa_com.CartesianPose)
  return false;
#undef DO_
}

void CartesianPose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:iiwa_com.CartesianPose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // double z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  // double a = 4;
  if (this->a() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->a(), output);
  }

  // double b = 5;
  if (this->b() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->b(), output);
  }

  // double c = 6;
  if (this->c() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->c(), output);
  }

  // string base_frame = 7;
  if (this->base_frame().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base_frame().data(), static_cast<int>(this->base_frame().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "iiwa_com.CartesianPose.base_frame");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->base_frame(), output);
  }

  // string child_frame = 8;
  if (this->child_frame().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->child_frame().data(), static_cast<int>(this->child_frame().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "iiwa_com.CartesianPose.child_frame");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->child_frame(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:iiwa_com.CartesianPose)
}

::google::protobuf::uint8* CartesianPose::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:iiwa_com.CartesianPose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // double z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  // double a = 4;
  if (this->a() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->a(), target);
  }

  // double b = 5;
  if (this->b() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->b(), target);
  }

  // double c = 6;
  if (this->c() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->c(), target);
  }

  // string base_frame = 7;
  if (this->base_frame().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base_frame().data(), static_cast<int>(this->base_frame().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "iiwa_com.CartesianPose.base_frame");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->base_frame(), target);
  }

  // string child_frame = 8;
  if (this->child_frame().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->child_frame().data(), static_cast<int>(this->child_frame().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "iiwa_com.CartesianPose.child_frame");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->child_frame(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:iiwa_com.CartesianPose)
  return target;
}

size_t CartesianPose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:iiwa_com.CartesianPose)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string base_frame = 7;
  if (this->base_frame().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->base_frame());
  }

  // string child_frame = 8;
  if (this->child_frame().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->child_frame());
  }

  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double z = 3;
  if (this->z() != 0) {
    total_size += 1 + 8;
  }

  // double a = 4;
  if (this->a() != 0) {
    total_size += 1 + 8;
  }

  // double b = 5;
  if (this->b() != 0) {
    total_size += 1 + 8;
  }

  // double c = 6;
  if (this->c() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CartesianPose::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:iiwa_com.CartesianPose)
  GOOGLE_DCHECK_NE(&from, this);
  const CartesianPose* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CartesianPose>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:iiwa_com.CartesianPose)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:iiwa_com.CartesianPose)
    MergeFrom(*source);
  }
}

void CartesianPose::MergeFrom(const CartesianPose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:iiwa_com.CartesianPose)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.base_frame().size() > 0) {

    base_frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_frame_);
  }
  if (from.child_frame().size() > 0) {

    child_frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.child_frame_);
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.a() != 0) {
    set_a(from.a());
  }
  if (from.b() != 0) {
    set_b(from.b());
  }
  if (from.c() != 0) {
    set_c(from.c());
  }
}

void CartesianPose::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:iiwa_com.CartesianPose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CartesianPose::CopyFrom(const CartesianPose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:iiwa_com.CartesianPose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CartesianPose::IsInitialized() const {
  return true;
}

void CartesianPose::Swap(CartesianPose* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CartesianPose::InternalSwap(CartesianPose* other) {
  using std::swap;
  base_frame_.Swap(&other->base_frame_);
  child_frame_.Swap(&other->child_frame_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(a_, other->a_);
  swap(b_, other->b_);
  swap(c_, other->c_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CartesianPose::GetMetadata() const {
  protobuf_iiwa_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iiwa_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CartesianForce::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CartesianForce::kFXFieldNumber;
const int CartesianForce::kFYFieldNumber;
const int CartesianForce::kFZFieldNumber;
const int CartesianForce::kTXFieldNumber;
const int CartesianForce::kTYFieldNumber;
const int CartesianForce::kTZFieldNumber;
const int CartesianForce::kFrameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CartesianForce::CartesianForce()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iiwa_5fservice_2eproto::InitDefaultsCartesianForce();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:iiwa_com.CartesianForce)
}
CartesianForce::CartesianForce(const CartesianForce& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.frame().size() > 0) {
    frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_);
  }
  ::memcpy(&f_x_, &from.f_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&t_z_) -
    reinterpret_cast<char*>(&f_x_)) + sizeof(t_z_));
  // @@protoc_insertion_point(copy_constructor:iiwa_com.CartesianForce)
}

void CartesianForce::SharedCtor() {
  frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&f_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&t_z_) -
      reinterpret_cast<char*>(&f_x_)) + sizeof(t_z_));
  _cached_size_ = 0;
}

CartesianForce::~CartesianForce() {
  // @@protoc_insertion_point(destructor:iiwa_com.CartesianForce)
  SharedDtor();
}

void CartesianForce::SharedDtor() {
  frame_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CartesianForce::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CartesianForce::descriptor() {
  ::protobuf_iiwa_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iiwa_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CartesianForce& CartesianForce::default_instance() {
  ::protobuf_iiwa_5fservice_2eproto::InitDefaultsCartesianForce();
  return *internal_default_instance();
}

CartesianForce* CartesianForce::New(::google::protobuf::Arena* arena) const {
  CartesianForce* n = new CartesianForce;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CartesianForce::Clear() {
// @@protoc_insertion_point(message_clear_start:iiwa_com.CartesianForce)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  frame_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&f_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&t_z_) -
      reinterpret_cast<char*>(&f_x_)) + sizeof(t_z_));
  _internal_metadata_.Clear();
}

bool CartesianForce::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:iiwa_com.CartesianForce)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double f_x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &f_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double f_y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &f_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double f_z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &f_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double t_x = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &t_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double t_y = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &t_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double t_z = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &t_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string frame = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_frame()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->frame().data(), static_cast<int>(this->frame().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "iiwa_com.CartesianForce.frame"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:iiwa_com.CartesianForce)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:iiwa_com.CartesianForce)
  return false;
#undef DO_
}

void CartesianForce::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:iiwa_com.CartesianForce)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double f_x = 1;
  if (this->f_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->f_x(), output);
  }

  // double f_y = 2;
  if (this->f_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->f_y(), output);
  }

  // double f_z = 3;
  if (this->f_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->f_z(), output);
  }

  // double t_x = 4;
  if (this->t_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->t_x(), output);
  }

  // double t_y = 5;
  if (this->t_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->t_y(), output);
  }

  // double t_z = 6;
  if (this->t_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->t_z(), output);
  }

  // string frame = 7;
  if (this->frame().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->frame().data(), static_cast<int>(this->frame().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "iiwa_com.CartesianForce.frame");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->frame(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:iiwa_com.CartesianForce)
}

::google::protobuf::uint8* CartesianForce::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:iiwa_com.CartesianForce)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double f_x = 1;
  if (this->f_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->f_x(), target);
  }

  // double f_y = 2;
  if (this->f_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->f_y(), target);
  }

  // double f_z = 3;
  if (this->f_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->f_z(), target);
  }

  // double t_x = 4;
  if (this->t_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->t_x(), target);
  }

  // double t_y = 5;
  if (this->t_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->t_y(), target);
  }

  // double t_z = 6;
  if (this->t_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->t_z(), target);
  }

  // string frame = 7;
  if (this->frame().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->frame().data(), static_cast<int>(this->frame().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "iiwa_com.CartesianForce.frame");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->frame(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:iiwa_com.CartesianForce)
  return target;
}

size_t CartesianForce::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:iiwa_com.CartesianForce)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string frame = 7;
  if (this->frame().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->frame());
  }

  // double f_x = 1;
  if (this->f_x() != 0) {
    total_size += 1 + 8;
  }

  // double f_y = 2;
  if (this->f_y() != 0) {
    total_size += 1 + 8;
  }

  // double f_z = 3;
  if (this->f_z() != 0) {
    total_size += 1 + 8;
  }

  // double t_x = 4;
  if (this->t_x() != 0) {
    total_size += 1 + 8;
  }

  // double t_y = 5;
  if (this->t_y() != 0) {
    total_size += 1 + 8;
  }

  // double t_z = 6;
  if (this->t_z() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CartesianForce::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:iiwa_com.CartesianForce)
  GOOGLE_DCHECK_NE(&from, this);
  const CartesianForce* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CartesianForce>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:iiwa_com.CartesianForce)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:iiwa_com.CartesianForce)
    MergeFrom(*source);
  }
}

void CartesianForce::MergeFrom(const CartesianForce& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:iiwa_com.CartesianForce)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.frame().size() > 0) {

    frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_);
  }
  if (from.f_x() != 0) {
    set_f_x(from.f_x());
  }
  if (from.f_y() != 0) {
    set_f_y(from.f_y());
  }
  if (from.f_z() != 0) {
    set_f_z(from.f_z());
  }
  if (from.t_x() != 0) {
    set_t_x(from.t_x());
  }
  if (from.t_y() != 0) {
    set_t_y(from.t_y());
  }
  if (from.t_z() != 0) {
    set_t_z(from.t_z());
  }
}

void CartesianForce::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:iiwa_com.CartesianForce)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CartesianForce::CopyFrom(const CartesianForce& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:iiwa_com.CartesianForce)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CartesianForce::IsInitialized() const {
  return true;
}

void CartesianForce::Swap(CartesianForce* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CartesianForce::InternalSwap(CartesianForce* other) {
  using std::swap;
  frame_.Swap(&other->frame_);
  swap(f_x_, other->f_x_);
  swap(f_y_, other->f_y_);
  swap(f_z_, other->f_z_);
  swap(t_x_, other->t_x_);
  swap(t_y_, other->t_y_);
  swap(t_z_, other->t_z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CartesianForce::GetMetadata() const {
  protobuf_iiwa_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iiwa_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace iiwa_com

// @@protoc_insertion_point(global_scope)
